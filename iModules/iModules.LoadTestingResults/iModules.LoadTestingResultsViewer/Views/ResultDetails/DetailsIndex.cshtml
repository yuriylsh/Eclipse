@model DetailsViewModel
<h2>General information</h2>
<table id="generalInfo" class="table borderlessTable">
    <tr><td>Started:</td><td>@Model.Start</td></tr>
    <tr><td>Ended:</td><td>@Model.End</td></tr>
    <tr><td>Duration:</td><td>@Model.Duration minutes</td></tr>
    <tr class="pass"><td>Passed test runs:</td><td>@Model.TotalPassedTests</td></tr>
    <tr class="fail"><td>Failed test runs:</td><td>@Model.TotalFailedTests</td></tr>
</table>

<h2>Test cases summary</h2>
<table id="testCaseSummary" class="table table-striped">
    <tr>
        <th>Name</th>
        <th>Total runs</th>
        <th class="pass">Passed runs</th>
        <th class="fail">Failed runs</th>
        <th>Duration, seconds</th>
        <th>Duration Min, seconds</th>
        <th>Duration Max, seconds</th>
    </tr>
    @foreach (var test in Model.TestCases)
    {
        <tr>
            <td>@test.Name</td>
            <td>@test.Runs</td>
            <td class="pass">@test.Passed</td>
            <td class="fail">@test.Failed @if(test.Failed >0){<a href="@Model.GetErrorsLink(test, Model.LoadTestRunId)" class="errorsLink">*</a>}</td>
            <td>@test.Percentile90.ToString("#.##")</td>
            <td>@test.Minimum.ToString("#.##")</td>
            <td>@test.Maximum.ToString("#.##")</td>
        </tr>
    }
</table>

<h2>Page timings</h2>
<table id="pageTimings" class="table table-striped">
    <tr>
        <th>Test case</th>
        <th>Request</th>
        <th>Average Page Time, sec</th>
    </tr>
    @foreach (var test in Model.PageTimings)
    {
        <tr>
            <td>@test.TestCaseName</td>
            <td>@test.RequestUri</td>
            <td>@test.CumulativeValue.ToString("0.##")</td>
        </tr>
    }
</table>

<h2>Miscellaneous counters</h2>
<table id="loadTestCounters" class="table table-striped">
    <tr>
        <th>Category</th>
        <th>Counter</th>
        <th>Value</th>
        <th>Target direction</th>
    </tr>
    @foreach (var counter in Model.LoadTestCounters)
    {
        <tr>
            <td>@counter.CategoryName</td>
            <td>@counter.CounterName</td>
            <td>@counter.CumulativeValue.ToString("0.####")</td>
            <td>@if (counter.HigherIsBetter){<text>&#x2191;</text>}else{<text>&#x2193;</text>} </td>
        </tr>
    }
</table>



